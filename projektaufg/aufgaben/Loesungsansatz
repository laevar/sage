global Mensch
global Computer
Mensch=[]
Computer=[]

#ganzzahlige Zufallszahl zwischen 0 und max
def Zufallszahl(max):
    return int(round(random()*max))
    
def Zufallskoord():
    return (Zufallszahl(2),Zufallszahl(2))
    
def Computerwahl(M, C):
    Koordinate=Zufallskoord()
    while (Koordinate in C or Koordinate in M):
        Koordinate = Zufallskoord()
    return Koordinate
    
def gewonnen(A):
    #3 in einer Reihe?
    for reihe in [0..2]:
        R=[x for x in A if x[0]==reihe]
        if len(R)==3:
            #print 'Reihe'
            #print reihe 
            return true

    #3 in einer Spalte?
    for spalte in [0..2]:
        S=[y for y in A if y[1]==spalte]
        if len(S)==3:
            #print 'Spalte'
            #print spalte
            return true
            
    #3 Diagonal?
    if (1,1) in A and (0,0) in A and (2,2) in A:
        #print 'Diagonale rd'
        return true 
    if (0,2) in A and (1,1) in A and (2,0) in A:
        #print 'Diagonale ru'
        return true
        
    return false
queens=[]
Optionen=['Setze Stein','Neustart']


@interact
def _(Koordinate=input_box(default=(0,0)), option=selector(Optionen, buttons=True), auto_update=True ):
    global Mensch
    global Computer
    if option=='Setze Stein':
        if Koordinate not in Mensch and Koordinate not in Computer:
            if Koordinate[0]>2 or Koordinate[1]>2:
                print 'Koordinate ist nicht im Spielfeld, \n Bitte neue Wahl treffen!'
            else:
                Mensch.append(Koordinate)
                if gewonnen(Mensch):
                    print 'Gewonnen !!!'
                else:
                    Computer.append(Computerwahl(Mensch, Computer))
                    if gewonnen(Computer):
                        print 'leider verloren'
        else:
            print 'Position ist schon besetzt, bitte eine andere Position w√§hlen!'           
    else:
        Mensch=[]
        Computer=[]
                    
         
    Spielfeld=matrix(ZZ,3,3)
    
    #Spielfeld initialisieren
    for x in range(3):
        for y in range(3):
            Spielfeld[x,y]=(x+y)%2
            
    #Gesetzte Figuren anzeigen
    for x,y in Mensch:
        for i in range(3):
            for j in range(3):
                if x==i and y==j:
                     Spielfeld[x,y]=10
    for x,y in Computer:
        for i in range(3):
            for j in range(3):
                if x==i and y==j:
                     Spielfeld[x,y]=-5
                
    show(matrix_plot(Spielfeld, cmap='winter' ))
